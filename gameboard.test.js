const GameBoard = require('./src/gameboard');

test('hit target', () => {
  let testBoard = GameBoard();
  expect(testBoard.displayBoard()).toEqual([
    [
      'SHIP',
      'SHIP',
      'water',
      'water',
      'water',
      'water',
      'water',
      'water',
      'water',
      'water',
    ],
    [
      'SHIP',
      'SHIP',
      'SHIP',
      'SHIP',
      'water',
      'water',
      'water',
      'water',
      'water',
      'water',
    ],
    [
      'SHIP',
      'SHIP',
      'SHIP',
      'water',
      'water',
      'water',
      'water',
      'water',
      'water',
      'water',
    ],
    [
      'SHIP',
      'SHIP',
      'SHIP',
      'water',
      'water',
      'water',
      'water',
      'water',
      'water',
      'water',
    ],
    [
      'SHIP',
      'SHIP',
      'SHIP',
      'SHIP',
      'SHIP',
      'water',
      'water',
      'water',
      'water',
      'water',
    ],
    [
      'water',
      'water',
      'water',
      'water',
      'water',
      'water',
      'water',
      'water',
      'water',
      'water',
    ],
    [
      'water',
      'water',
      'water',
      'water',
      'water',
      'water',
      'water',
      'water',
      'water',
      'water',
    ],
    [
      'water',
      'water',
      'water',
      'water',
      'water',
      'water',
      'water',
      'water',
      'water',
      'water',
    ],
    [
      'water',
      'water',
      'water',
      'water',
      'water',
      'water',
      'water',
      'water',
      'water',
      'water',
    ],
    [
      'water',
      'water',
      'water',
      'water',
      'water',
      'water',
      'water',
      'water',
      'water',
      'water',
    ],
  ]);
});

test('hit target', () => {
  let testBoard = GameBoard();
  testBoard.receiveAttack(3, 5);
  expect(testBoard.displayBoard()).toEqual([
    [
      'SHIP',
      'SHIP',
      'water',
      'water',
      'water',
      'water',
      'water',
      'water',
      'water',
      'water',
    ],
    [
      'SHIP',
      'SHIP',
      'SHIP',
      'SHIP',
      'water',
      'water',
      'water',
      'water',
      'water',
      'water',
    ],
    [
      'SHIP',
      'SHIP',
      'SHIP',
      'water',
      'water',
      'water',
      'water',
      'water',
      'water',
      'water',
    ],
    [
      'SHIP',
      'SHIP',
      'SHIP',
      'water',
      'water',
      'miss',
      'water',
      'water',
      'water',
      'water',
    ],
    [
      'SHIP',
      'SHIP',
      'SHIP',
      'SHIP',
      'SHIP',
      'water',
      'water',
      'water',
      'water',
      'water',
    ],
    [
      'water',
      'water',
      'water',
      'water',
      'water',
      'water',
      'water',
      'water',
      'water',
      'water',
    ],
    [
      'water',
      'water',
      'water',
      'water',
      'water',
      'water',
      'water',
      'water',
      'water',
      'water',
    ],
    [
      'water',
      'water',
      'water',
      'water',
      'water',
      'water',
      'water',
      'water',
      'water',
      'water',
    ],
    [
      'water',
      'water',
      'water',
      'water',
      'water',
      'water',
      'water',
      'water',
      'water',
      'water',
    ],
    [
      'water',
      'water',
      'water',
      'water',
      'water',
      'water',
      'water',
      'water',
      'water',
      'water',
    ],
  ]);
});

test('hit target', () => {
  let testBoard = GameBoard();
  testBoard.receiveAttack(3, 5);
  testBoard.receiveAttack(0, 0);
  testBoard.receiveAttack(0, 1);
  expect(testBoard.displayBoard()).toEqual([
    [
      'hit',
      'hit',
      'water',
      'water',
      'water',
      'water',
      'water',
      'water',
      'water',
      'water',
    ],
    [
      'SHIP',
      'SHIP',
      'SHIP',
      'SHIP',
      'water',
      'water',
      'water',
      'water',
      'water',
      'water',
    ],
    [
      'SHIP',
      'SHIP',
      'SHIP',
      'water',
      'water',
      'water',
      'water',
      'water',
      'water',
      'water',
    ],
    [
      'SHIP',
      'SHIP',
      'SHIP',
      'water',
      'water',
      'miss',
      'water',
      'water',
      'water',
      'water',
    ],
    [
      'SHIP',
      'SHIP',
      'SHIP',
      'SHIP',
      'SHIP',
      'water',
      'water',
      'water',
      'water',
      'water',
    ],
    [
      'water',
      'water',
      'water',
      'water',
      'water',
      'water',
      'water',
      'water',
      'water',
      'water',
    ],
    [
      'water',
      'water',
      'water',
      'water',
      'water',
      'water',
      'water',
      'water',
      'water',
      'water',
    ],
    [
      'water',
      'water',
      'water',
      'water',
      'water',
      'water',
      'water',
      'water',
      'water',
      'water',
    ],
    [
      'water',
      'water',
      'water',
      'water',
      'water',
      'water',
      'water',
      'water',
      'water',
      'water',
    ],
    [
      'water',
      'water',
      'water',
      'water',
      'water',
      'water',
      'water',
      'water',
      'water',
      'water',
    ],
  ]);
});
